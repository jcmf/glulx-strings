doctype html
html(lang='en')
  head
    title glulx-strings
    style
      :stylus
        body
          margin 0
          color black
          background-color white
        #strings
          margin 0.5em
        .string
          padding-left 2em
          text-indent -2em
        #ui
          max-width 30em
          margin 0.5em auto
        #input-div
          padding 0.5em
          border-top 1px solid black
          border-bottom 1px solid black
          background-color #ddd
    script
      :coffeescript
        {extract_strings} = require '.'
        $ = require 'jquery'
        $ ->
          $strings = $ '#strings'
          loadFiles = (files) ->
            if not files then return
            $strings.empty()
            for file in files
              reader = new FileReader()
              reader.onloadend = ->
                bytes = new Uint8Array reader.result
                extract_strings bytes, (s, data_addr, code_addr) ->
                  if not s = s.trimRight() then return
                  $string = $ '<div class="string">'
                  $string.text s
                  title = []
                  if data_addr then title.push "data:0x#{data_addr.toString 16}"
                  if code_addr then title.push "code:0x#{code_addr.toString 16}"
                  if title.length then $string.attr 'title', title.join '; '
                  $strings.append $string
              reader.readAsArrayBuffer file
            return
          $input = $ '#input'
          $input.on 'change', -> loadFiles $input.get(0).files
          $body = $ 'body'
          dragDropFiles = (e) ->
            if files = e.originalEvent?.dataTransfer?.files
              e.stopPropagation()
              e.preventDefault()
            return files
          $body.on 'dragenter dragover', dragDropFiles
          $body.on 'drop', (e) -> loadFiles dragDropFiles e
  body
    #strings
    #ui
      #input-div
        input#input(type='file')
      #text
        :markdown
          # glulx-strings

          This program extracts text from Glulz or Z-code files,
          such as interactive fiction or text adventure games created
          by the Inform compiler.

          To use it, drag a `.gblorb`, `.z8`, `.zip`, or other story
          file from your computer onto these words, or click the
          button above to open a file chooser.  If it works, text
          will appear.  Note that the results are not perfect: some
          meaningless strings of letters will certainly also appear,
          and some in-game text might not appear.

          This program does not use or require a network connection.
          You can save it to disk as a `.html` file to make it
          easier to use offline.

          For more information about what this is for and how it
          works, see the [GitHub
          repository](https://github.com/jcmf/glulx-strings).
